<?xml version="1.0" ?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Include component snippets for macro definitions -->
  <xacro:include filename="$(find blimp_description)/urdf/plugin_component_snippets.xacro" />

  <!-- =============================================================== -->
  <!-- ==================== IMU SENSOR MACRO ======================= -->
  <!-- =============================================================== -->
  <xacro:macro name="imu_plugin_macro"
    params="namespace imu_suffix parent_link imu_topic
      mass_imu_sensor gyroscope_noise_density gyroscope_random_walk
      gyroscope_bias_correlation_time gyroscope_turn_on_bias_sigma
      accelerometer_noise_density accelerometer_random_walk
      accelerometer_bias_correlation_time accelerometer_turn_on_bias_sigma
      *inertia *origin">
    <!-- IMU link -->
    <link name="imu${imu_suffix}_link">
      <inertial>
        <xacro:insert_block name="inertia" />
        <mass value="${mass_imu_sensor}" />  <!-- [kg] -->
        <origin xyz="0 0 0" rpy="0 0 0" />
      </inertial>
    </link>
    <!-- IMU joint -->
    <joint name="imu${imu_suffix}_joint" type="revolute">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="imu${imu_suffix}_link" />
      <limit upper="0" lower="0" effort="0" velocity="0" />
    </joint>
    <!-- Gazebo Harmonic IMU Plugin -->
    <gazebo reference="imu${imu_suffix}_link">
      <sensor name="imu${imu_suffix}_sensor" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>${gyroscope_noise_density}</stddev>
                <bias_mean>0.0</bias_mean>
                <bias_stddev>${gyroscope_turn_on_bias_sigma}</bias_stddev>
                <dynamic_bias_stddev>${gyroscope_random_walk}</dynamic_bias_stddev>
                <dynamic_bias_correlation_time>${gyroscope_bias_correlation_time}</dynamic_bias_correlation_time>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>${gyroscope_noise_density}</stddev>
                <bias_mean>0.0</bias_mean>
                <bias_stddev>${gyroscope_turn_on_bias_sigma}</bias_stddev>
                <dynamic_bias_stddev>${gyroscope_random_walk}</dynamic_bias_stddev>
                <dynamic_bias_correlation_time>${gyroscope_bias_correlation_time}</dynamic_bias_correlation_time>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>${gyroscope_noise_density}</stddev>
                <bias_mean>0.0</bias_mean>
                <bias_stddev>${gyroscope_turn_on_bias_sigma}</bias_stddev>
                <dynamic_bias_stddev>${gyroscope_random_walk}</dynamic_bias_stddev>
                <dynamic_bias_correlation_time>${gyroscope_bias_correlation_time}</dynamic_bias_correlation_time>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>${accelerometer_noise_density}</stddev>
                <bias_mean>0.0</bias_mean>
                <bias_stddev>${accelerometer_turn_on_bias_sigma}</bias_stddev>
                <dynamic_bias_stddev>${accelerometer_random_walk}</dynamic_bias_stddev>
                <dynamic_bias_correlation_time>${accelerometer_bias_correlation_time}</dynamic_bias_correlation_time>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>${accelerometer_noise_density}</stddev>
                <bias_mean>0.0</bias_mean>
                <bias_stddev>${accelerometer_turn_on_bias_sigma}</bias_stddev>
                <dynamic_bias_stddev>${accelerometer_random_walk}</dynamic_bias_stddev>
                <dynamic_bias_correlation_time>${accelerometer_bias_correlation_time}</dynamic_bias_correlation_time>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>${accelerometer_noise_density}</stddev>
                <bias_mean>0.0</bias_mean>
                <bias_stddev>${accelerometer_turn_on_bias_sigma}</bias_stddev>
                <dynamic_bias_stddev>${accelerometer_random_walk}</dynamic_bias_stddev>
                <dynamic_bias_correlation_time>${accelerometer_bias_correlation_time}</dynamic_bias_correlation_time>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin filename="gz-sim-imu-system" name="gz::sim::systems::Imu">
          <ros>
            <namespace>${namespace}</namespace>
            <remapping>~/out:=${imu_topic}</remapping>
          </ros>
          <initial_orientation_as_reference>false</initial_orientation_as_reference>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  <!-- =============================================================== -->
  <!-- ==================== GPS SENSOR MACRO ======================= -->
  <!-- =============================================================== -->
  <xacro:macro name="gps_plugin_macro"
    params="namespace gps_suffix parent_link gps_topic ground_speed_topic
      mass_gps_sensor horizontal_pos_std_dev vertical_pos_std_dev
      horizontal_vel_std_dev vertical_vel_std_dev *inertia *origin">
    <!-- GPS link -->
    <link name="gps${gps_suffix}_link">
      <inertial>
        <xacro:insert_block name="inertia" />
        <mass value="${mass_gps_sensor}" />
        <origin xyz="0 0 0" rpy="0 0 0" />
      </inertial>
    </link>
    <!-- GPS joint -->
    <joint name="gps${gps_suffix}_joint" type="revolute">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="gps${gps_suffix}_link" />
      <limit upper="0" lower="0" effort="0" velocity="0" />
    </joint>
    <!-- Gazebo Harmonic GPS Plugin -->
    <gazebo reference="gps${gps_suffix}_link">
      <sensor name="gps${gps_suffix}_sensor" type="navsat">
        <always_on>true</always_on>
        <update_rate>5.0</update_rate>
        <navsat>
          <position_sensing>
            <horizontal>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>${horizontal_pos_std_dev}</stddev>
              </noise>
            </horizontal>
            <vertical>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>${vertical_pos_std_dev}</stddev>
              </noise>
            </vertical>
          </position_sensing>
          <velocity_sensing>
            <horizontal>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>${horizontal_vel_std_dev}</stddev>
              </noise>
            </horizontal>
            <vertical>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>${vertical_vel_std_dev}</stddev>
              </noise>
            </vertical>
          </velocity_sensing>
        </navsat>
        <plugin filename="gz-sim-navsat-system" name="gz::sim::systems::NavSat">
          <ros>
            <namespace>${namespace}</namespace>
            <remapping>~/out:=${gps_topic}</remapping>
          </ros>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  <!-- =============================================================== -->
  <!-- ==================== ODOMETRY MACRO ========================= -->
  <!-- =============================================================== -->
  <xacro:macro name="odometry_plugin_macro"
    params="namespace odometry_sensor_suffix parent_link pose_topic 
      pose_with_covariance_topic position_topic transform_topic odometry_topic
      parent_frame_id child_frame_id mass_odometry_sensor measurement_divisor
      measurement_delay unknown_delay noise_normal_position noise_normal_quaternion
      noise_normal_linear_velocity noise_normal_angular_velocity noise_uniform_position
      noise_uniform_quaternion noise_uniform_linear_velocity noise_uniform_angular_velocity
      enable_odometry_map odometry_map image_scale *inertia *origin">
    <!-- Odometry link -->
    <link name="odometry${odometry_sensor_suffix}_link">
      <inertial>
        <xacro:insert_block name="inertia" />
        <mass value="${mass_odometry_sensor}" />
        <origin xyz="0 0 0" rpy="0 0 0" />
      </inertial>
    </link>
    <!-- Odometry joint -->
    <joint name="odometry${odometry_sensor_suffix}_joint" type="revolute">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="odometry${odometry_sensor_suffix}_link" />
      <limit upper="0" lower="0" effort="0" velocity="0" />
    </joint>
    <!-- Gazebo Harmonic Odometry Plugin -->
    <gazebo reference="odometry${odometry_sensor_suffix}_link">
      <plugin filename="gz-sim-odometry-publisher-system" name="gz::sim::systems::OdometryPublisher">
        <ros>
          <namespace>${namespace}</namespace>
          <remapping>~/out:=${odometry_topic}</remapping>
        </ros>
        <odom_frame>${parent_frame_id}</odom_frame>
        <robot_base_frame>${child_frame_id}</robot_base_frame>
        <odom_publish_frequency>100</odom_publish_frequency>
        <odom_covariance_x>0.0001</odom_covariance_x>
        <odom_covariance_y>0.0001</odom_covariance_y>
        <odom_covariance_yaw>0.01</odom_covariance_yaw>
      </plugin>
    </gazebo>
  </xacro:macro>

  <!-- =============================================================== -->
  <!-- ==================== CONVENIENCE MACROS ==================== -->
  <!-- =============================================================== -->
  
  <xacro:macro name="ground_truth_imu_and_odometry" params="namespace parent_link">
    <!-- Mount an IMU providing ground truth. -->
    <xacro:imu_plugin_macro
      namespace="${namespace}"
      imu_suffix="gt"
      parent_link="${parent_link}"
      imu_topic="ground_truth/imu"
      mass_imu_sensor="0.00001"
      gyroscope_noise_density="0.0"
      gyroscope_random_walk="0.0"
      gyroscope_bias_correlation_time="1000.0"
      gyroscope_turn_on_bias_sigma="0.0"
      accelerometer_noise_density="0.0"
      accelerometer_random_walk="0.0"
      accelerometer_bias_correlation_time="300.0"
      accelerometer_turn_on_bias_sigma="0.0">
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:imu_plugin_macro>

    <!-- Mount a generic odometry sensor providing ground truth. -->
    <xacro:odometry_plugin_macro
      namespace="${namespace}"
      odometry_sensor_suffix="gt"
      parent_link="${parent_link}"
      pose_topic="ground_truth/pose"
      pose_with_covariance_topic="ground_truth/pose_with_covariance"
      position_topic="ground_truth/position"
      transform_topic="ground_truth/transform"
      odometry_topic="ground_truth/odometry"
      parent_frame_id="world"
      child_frame_id="base_link"
      mass_odometry_sensor="0.00001"
      measurement_divisor="1"
      measurement_delay="0"
      unknown_delay="0.0"
      noise_normal_position="0 0 0"
      noise_normal_quaternion="0 0 0"
      noise_normal_linear_velocity="0 0 0"
      noise_normal_angular_velocity="0 0 0"
      noise_uniform_position="0 0 0"
      noise_uniform_quaternion="0 0 0"
      noise_uniform_linear_velocity="0 0 0"
      noise_uniform_angular_velocity="0 0 0"
      enable_odometry_map="false"
      odometry_map=""
      image_scale="">
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </xacro:odometry_plugin_macro>
  </xacro:macro>

  <xacro:macro name="tail_imu_and_odometry" params="namespace parent_link">
    <!-- Mount an IMU for tail. -->
    <xacro:imu_plugin_macro
      namespace="${namespace}"
      imu_suffix="tail"
      parent_link="${parent_link}"
      imu_topic="tail/imu"
      mass_imu_sensor="0.00001"
      gyroscope_noise_density="0.0"
      gyroscope_random_walk="0.0"
      gyroscope_bias_correlation_time="1000.0"
      gyroscope_turn_on_bias_sigma="0.0"
      accelerometer_noise_density="0.0"
      accelerometer_random_walk="0.0"
      accelerometer_bias_correlation_time="300.0"
      accelerometer_turn_on_bias_sigma="0.0">
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <origin xyz="0 0 0" rpy="${pi} 0 0" />
    </xacro:imu_plugin_macro>

    <!-- Mount a generic odometry sensor for tail. -->
    <xacro:odometry_plugin_macro
      namespace="${namespace}"
      odometry_sensor_suffix="tail"
      parent_link="${parent_link}"
      pose_topic="tail/pose"
      pose_with_covariance_topic="tail/pose_with_covariance"
      position_topic="tail/position"
      transform_topic="tail/transform"
      odometry_topic="tail/odometry"
      parent_frame_id="world"
      child_frame_id="${parent_link}"
      mass_odometry_sensor="0.00001"
      measurement_divisor="1"
      measurement_delay="0"
      unknown_delay="0.0"
      noise_normal_position="0 0 0"
      noise_normal_quaternion="0 0 0"
      noise_normal_linear_velocity="0 0 0"
      noise_normal_angular_velocity="0 0 0"
      noise_uniform_position="0 0 0"
      noise_uniform_quaternion="0 0 0"
      noise_uniform_linear_velocity="0 0 0"
      noise_uniform_angular_velocity="0 0 0"
      enable_odometry_map="false"
      odometry_map=""
      image_scale="">
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <origin xyz="0.0 0.0 0.0" rpy="${pi} 0.0 0.0" />
    </xacro:odometry_plugin_macro>
  </xacro:macro>

  <xacro:macro name="default_imu" params="namespace parent_link">
    <!-- ADIS16448 IMU. -->
    <xacro:imu_plugin_macro
      namespace="${namespace}"
      imu_suffix=""
      parent_link="${parent_link}"
      imu_topic="imu"
      mass_imu_sensor="0.015"
      gyroscope_noise_density="0.0003394"
      gyroscope_random_walk="0.000038785"
      gyroscope_bias_correlation_time="1000.0"
      gyroscope_turn_on_bias_sigma="0.0087"
      accelerometer_noise_density="0.004"
      accelerometer_random_walk="0.006"
      accelerometer_bias_correlation_time="300.0"
      accelerometer_turn_on_bias_sigma="0.1960">
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:imu_plugin_macro>
  </xacro:macro>

  <xacro:macro name="default_gps" params="namespace parent_link">
    <!-- Default GPS. -->
    <xacro:gps_plugin_macro
      namespace="${namespace}"
      gps_suffix=""
      parent_link="${parent_link}"
      gps_topic="gps"
      ground_speed_topic="ground_speed"
      mass_gps_sensor="0.015"
      horizontal_pos_std_dev="3.0"
      vertical_pos_std_dev="6.0"
      horizontal_vel_std_dev="0.1"
      vertical_vel_std_dev="0.1">
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:gps_plugin_macro>
  </xacro:macro>

</robot>