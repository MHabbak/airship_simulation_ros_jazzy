<?xml version="1.0" ?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">
  
  <!-- Wind Plugin - Using your migrated normwind_plugin -->
  <xacro:if value="$(arg enable_wind)">
    <gazebo>
      <!-- FIXED: Correct Gazebo Harmonic plugin filename format -->
      <plugin filename="normwind_plugin" name="normwind_plugin::NormWindPlugin">
        <robotNamespace>${namespace}</robotNamespace>
        <linkName>blimp_body_link</linkName>
        <frameId>world</frameId>
        <windDirectionMean>1 1 0</windDirectionMean>
        <windSpeedMean>1.5</windSpeedMean>
        <windTurbulenceLevel>3</windTurbulenceLevel>
        <useCustomStaticWindField>false</useCustomStaticWindField>
        <customWindFieldPath>~/blimp_simulator/blimp_description/worlds/wind_field.txt</customWindFieldPath>
        <windForcePubTopic>wind_force</windForcePubTopic>
        <windSpeedPubTopic>wind_speed</windSpeedPubTopic>
      </plugin>
    </gazebo>
  </xacro:if>

  <!-- Aerodynamic Forces - Using your migrated finliftdrag_plugin -->
  <xacro:if value="$(arg enable_physics)">
    
    <!-- Main body aerodynamics -->
    <gazebo>
      <!-- FIXED: Correct Gazebo Harmonic plugin filename format -->
      <plugin name="blimp_body_finliftdrag" filename="finliftdrag_plugin">
        <robotNamespace>${namespace}</robotNamespace> 
        <link_name>blimp_body_link</link_name>
        <rho>1.2041</rho>
        <cla>1.2</cla>
        <cda>0.04</cda>
        <cma>0.01</cma>
        <alpha_stall>0.3839</alpha_stall>
        <cla_stall>0.0</cla_stall>
        <cda_stall>1.0</cda_stall>
        <cma_stall>0.0</cma_stall>
        <alpha_0>0</alpha_0>
        <area>2.5</area>
        <radial_symmetry>true</radial_symmetry>
        <upward>0 1 0</upward>
        <forward>1 0 0</forward>
        <cp>0 0 0</cp>
        <windSpeedSubTopic>wind_speed</windSpeedSubTopic>
      </plugin>
    </gazebo>

    <!-- Bottom rudder aerodynamics -->
    <gazebo>
      <!-- FIXED: Correct Gazebo Harmonic plugin filename format -->
      <plugin name="bot_rud_finliftdrag" filename="finliftdrag_plugin">
        <robotNamespace>${namespace}</robotNamespace> 
        <link_name>bot_rud_part1_link</link_name>
        <control_joint_name>bot_rud_part1_bot_rud_joint_link_joint</control_joint_name>
        <rho>1.2041</rho>
        <cla>0.6</cla>
        <cda>1.2</cda>
        <cma>0.01</cma>
        <alpha_stall>0.3839</alpha_stall>
        <cla_stall>0.0</cla_stall>
        <cda_stall>1.2</cda_stall>
        <cma_stall>0.0</cma_stall>
        <alpha_0>0</alpha_0>
        <area>0.5</area>
        <radial_symmetry>false</radial_symmetry>
        <upward>0 -1 0</upward>
        <forward>1 0 0</forward>
        <cp>0 0 0</cp>
        <control_joint_rad_to_cl>4.0</control_joint_rad_to_cl>
        <windSpeedSubTopic>wind_speed</windSpeedSubTopic>
      </plugin>
    </gazebo>

    <!-- Top rudder aerodynamics -->
    <gazebo>
      <!-- FIXED: Correct Gazebo Harmonic plugin filename format -->
      <plugin name="top_rud_finliftdrag" filename="finliftdrag_plugin">
        <robotNamespace>${namespace}</robotNamespace> 
        <link_name>top_rud_part1_link</link_name>
        <control_joint_name>top_rud_part1_top_rud_joint_link_joint</control_joint_name>
        <rho>1.2041</rho>
        <cla>0.6</cla>
        <cda>1.2</cda>
        <cma>0.01</cma>
        <alpha_stall>0.3839</alpha_stall>
        <area>0.5</area>
        <radial_symmetry>false</radial_symmetry>
        <upward>0 1 0</upward>
        <forward>1 0 0</forward>
        <cp>0 0 0</cp>
        <control_joint_rad_to_cl>4.0</control_joint_rad_to_cl>
        <windSpeedSubTopic>wind_speed</windSpeedSubTopic>
      </plugin>
    </gazebo>

  </xacro:if>

  <!-- Buoyancy Plugin - Using your migrated dynamicvolume_plugin -->
  <gazebo>
    <!-- FIXED: Correct Gazebo Harmonic plugin filename format -->
    <plugin name="dynamicvolume_plugin" filename="dynamicvolume_plugin">
      <robotNamespace>${namespace}</robotNamespace> 
      <linkName>blimp_body_link</linkName> 
      <dynamicVolumeTopic>dynamic_volume</dynamicVolumeTopic> 
      <heliumMassTopic>helium_mass</heliumMassTopic> 
      <heliumMassKG>1.0</heliumMassKG> 
      <refAlt>0</refAlt>
      <fluidDensity>1.2041</fluidDensity>
      <frameId>world</frameId>
      <!-- Link volume properties -->
      <link name="blimp_body_link">
        <volume>10.472</volume>
        <center_of_volume>0 0 0</center_of_volume>
      </link>
    </plugin>
  </gazebo>

  <!-- MOTOR PLUGINS  -->
  <!-- Left blade motor -->
  <gazebo>
    <!-- FIXED: Correct Gazebo Harmonic built-in plugin filename -->
    <plugin filename="gz-sim-multicopter-motor-model-system" 
            name="gz::sim::systems::MulticopterMotorModel">
      <robotNamespace>${namespace}</robotNamespace>
      <linkName>left_blade_link</linkName>
      <jointName>stick_left_blade_joint</jointName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>command/motor_speed</commandSubTopic>
      <actuator_number>0</actuator_number>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/0</motorSpeedPubTopic>
      <motorType>velocity</motorType>
      <ros>
        <namespace>${namespace}</namespace>
      </ros>
    </plugin>
  </gazebo>

  <!-- Right blade motor -->
  <gazebo>
    <!-- FIXED: Correct Gazebo Harmonic built-in plugin filename -->
    <plugin filename="gz-sim-multicopter-motor-model-system" 
            name="gz::sim::systems::MulticopterMotorModel">
      <robotNamespace>${namespace}</robotNamespace>
      <linkName>right_blade_link</linkName>
      <jointName>stick_right_blade_joint</jointName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>command/motor_speed</commandSubTopic>
      <actuator_number>1</actuator_number>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/1</motorSpeedPubTopic>
      <motorType>velocity</motorType>
      <ros>
        <namespace>${namespace}</namespace>
      </ros>
    </plugin>
  </gazebo>

  <!-- Bottom rudder motor -->
  <gazebo>
    <!-- FIXED: Correct Gazebo Harmonic built-in plugin filename -->
    <plugin filename="gz-sim-multicopter-motor-model-system" 
            name="gz::sim::systems::MulticopterMotorModel">
      <robotNamespace>${namespace}</robotNamespace>
      <linkName>bot_rud_motor_link</linkName>
      <jointName>bot_rud_part1_bot_rud_motor_joint</jointName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>command/motor_speed</commandSubTopic>
      <actuator_number>2</actuator_number>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/2</motorSpeedPubTopic>
      <motorType>velocity</motorType>
      <ros>
        <namespace>${namespace}</namespace>
      </ros>
    </plugin>
  </gazebo>

  <!-- REMOVED: Hardcoded sensor plugins that referenced deleted links -->
  <!-- The following sensor plugins were removed because they referenced 
       hardcoded links (imu_link, gps_link, magnetometer_link) that we deleted:
       
       - IMU sensor plugin (now handled by sensor plugin macros in description_sensor.xacro)
       - GPS sensor plugin (now handled by sensor plugin macros in description_sensor.xacro)  
       - Magnetometer sensor plugin (can be added via sensor macros if needed)
       
       These sensors are properly created by the sensor plugin system in:
       - description_sensor.xacro calls the sensor macros
       - plugin_sensors.xacro defines the sensor macros
       - The macros create both the links AND the sensor plugins
  -->

  <!-- Ground Truth Odometry - This doesn't reference a specific sensor link -->
  <xacro:if value="$(arg enable_ground_truth)">
    <gazebo>
      <!-- FIXED: Correct Gazebo Harmonic built-in plugin filename -->
      <plugin filename="gz-sim-odometry-publisher-system" 
              name="gz::sim::systems::OdometryPublisher">
        <ros>
          <namespace>${namespace}</namespace>
          <remapping>~/out:=odometry</remapping>
        </ros>
        <odom_frame>odom</odom_frame>
        <robot_base_frame>blimp_body_link</robot_base_frame>
        <odom_publish_frequency>50</odom_publish_frequency>
      </plugin>
    </gazebo>
  </xacro:if>

</robot>