<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Constants -->
  <xacro:property name="M_PI" value="3.1415926535897931" />

  <!-- ASUS Xtion camera macro for ROS2/Gazebo Harmonic -->
  <!-- Preserves all original ROS1 properties while modernizing plugins -->
  <xacro:macro name="asus_camera" params="name parent namespace *origin">
    
    <!-- Main camera joint -->
    <joint name="${name}_joint" type="fixed">
      <xacro:insert_block name="origin"/>
      <parent link="${parent}"/>
      <child link="${name}_link"/>
    </joint>

    <!-- Main camera link - FIXED: Original ROS1 properties -->
    <link name="${name}_link">
      <inertial>
        <!-- FIXED: Original ROS1 mass -->
        <mass value="0.200" />
        <origin xyz="0 0 0" rpy="0 0 0" />
        <!-- FIXED: Original ROS1 inertia values -->
        <inertia ixx="5.8083e-4" ixy="0" ixz="0" iyy="3.0833e-5" iyz="0" izz="5.9083e-4" />
      </inertial>
      <!-- FIXED: Camera is invisible (commented in original ROS1) -->
      <!--<visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="model://kinect/meshes/kinect.dae"/>
        </geometry>
      </visual>-->
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <!-- FIXED: Original ROS1 collision geometry -->
          <box size="0.035 0.185 0.025"/>
        </geometry>
      </collision>
    </link>

    <!-- FIXED: Missing depth frame structure from ROS1 -->
    <joint name="${name}_depth_joint" type="fixed">
      <origin xyz="0.0 0.049 0.0" rpy="0 0 0" />
      <parent link="${name}_link" />
      <child link="${name}_depth_frame"/>
    </joint>
    <link name="${name}_depth_frame"/>

    <joint name="${name}_depth_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0.0 ${-M_PI/2}" />
      <parent link="${name}_depth_frame" />
      <child link="${name}_depth_optical_frame"/>
    </joint>
    <link name="${name}_depth_optical_frame"/>

    <!-- FIXED: Missing RGB frame structure from ROS1 -->
    <joint name="${name}_rgb_joint" type="fixed">
      <origin xyz="0.0 0.022 0.0" rpy="0 0 0" />
      <parent link="${name}_link" />
      <child link="${name}_rgb_frame"/>
    </joint>
    <link name="${name}_rgb_frame"/>

    <joint name="${name}_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0.0 ${-M_PI/2}" />
      <parent link="${name}_rgb_frame" />
      <child link="${name}_rgb_optical_frame"/>
    </joint>
    <link name="${name}_rgb_optical_frame"/>

    <!-- ASUS Xtion PRO camera sensor - FIXED: All original ROS1 properties -->
    <gazebo reference="${name}_depth_frame">
      <sensor type="depth" name="${name}">
        <!-- FIXED: Original ROS1 update rate -->
        <update_rate>60</update_rate>
        <camera>
          <!-- FIXED: Original ROS1 FOV (69.5 degrees) -->
          <horizontal_fov>${69.5 * M_PI/180.0}</horizontal_fov>
          <image>
            <format>R8G8B8</format>
            <!-- FIXED: Original ROS1 high resolution -->
            <width>2040</width>
            <height>1086</height>
          </image>
          <clip>
            <!-- FIXED: Original ROS1 near clip distance -->
            <near>0.5</near>
            <far>100</far>
          </clip>
        </camera>
        
        <!-- Modern ROS2/Gazebo Harmonic plugin replacing libgazebo_ros_openni_kinect.so -->
        <plugin filename="gz-sim-depth-camera-system" name="gz::sim::systems::DepthCamera">
          <ros>
            <remapping>~/image:=${name}/rgb/image_raw</remapping>
            <remapping>~/depth_image:=${name}/depth/image_raw</remapping>
            <remapping>~/camera_info:=${name}/rgb/camera_info</remapping>
            <remapping>~/depth_camera_info:=${name}/depth/camera_info</remapping>
            <remapping>~/point_cloud:=${name}/depth/points</remapping>
          </ros>
          
          <!-- FIXED: Original ROS1 parameters -->
          <always_on>true</always_on>
          <update_rate>60</update_rate>
          <frame_name>${name}_depth_optical_frame</frame_name>
          <point_cloud_cutoff>0.6</point_cloud_cutoff>
          
          <!-- FIXED: Original ROS1 distortion parameters -->
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
        </plugin>
      </sensor>
    </gazebo>

    <!-- Additional RGB camera sensor for better ROS2 compatibility -->
    <gazebo reference="${name}_rgb_frame">
      <sensor name="${name}_rgb" type="camera">
        <always_on>true</always_on>
        <update_rate>60</update_rate>
        <camera>
          <horizontal_fov>${69.5 * M_PI/180.0}</horizontal_fov>
          <image>
            <width>2040</width>
            <height>1086</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.5</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin filename="gz-sim-camera-system" name="gz::sim::systems::Camera">
          <ros>
            <remapping>~/image:=${name}/rgb/image_raw</remapping>
            <remapping>~/camera_info:=${name}/rgb/camera_info</remapping>
          </ros>
          <frame_name>${name}_rgb_optical_frame</frame_name>
        </plugin>
      </sensor>
    </gazebo>

  </xacro:macro>

</robot>
